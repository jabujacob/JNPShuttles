@model JNPPortal.Models.Transaction

@{

    if (Ajax.IsThisAjaxRequest())
    {
        Layout = null;
    }
}
<script src="~/Content/TextEditor/jquery-te-1.4.0.min.js"></script>
<link href="~/Content/TextEditor/jquery-te-1.4.0.css" rel="stylesheet" />
<script>
    $('.ckeditor').jqte();
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!-- Main content -->
    <section class="content">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-xs-12">
                <div class="box box-solid box-primary">
                    <div class="box-header">

                        @if (ViewBag.New)
                        {
                            if (ViewBag.Multiple)
                            {
                                <h3 class="box-title">Add Transaction for multiple vans</h3>
                            }
                            else
                            {
                                <h3 class="box-title">Add Transaction</h3>
                            }
                        }
                        else
                        {
                            <h3 class="box-title">Edit Transaction</h3>
                        }

                    </div><!-- /.box-header -->

                    <div class="alert alert-success alert-dismissable" id="dvMsgUser" style="display:none;">
                        <i class="fa fa-apple"></i>
                        <b> Update Successfully. </b>
                    </div>
                    <!-- form start -->

                    <div role="form">
                        <div class="box-body">

                            <div class="form-group">

                                @Html.LabelFor(model => model.Date)

                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control timePicker", @style = "width:200px" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>

                            @if (ViewBag.Multiple)
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VanId, new { @class = "" })
                                    @Html.ListBoxFor(model => model.SelectedVansId, (MultiSelectList)ViewBag.VanList, new { @class = "form-control", id = "vans-id", multiple = "multiple" })
                                    @Html.ValidationMessageFor(model => model.VansId)
                                </div>
                            }
                            else
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VanId, new { @class = "" })
                                    @Html.DropDownListFor(model => model.VanId, (SelectList)ViewBag.VanList, "Select One", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VanId)
                                </div>
                            }

                            <div class="form-group">
                                @Html.LabelFor(model => model.AccountId, new { @class = "" })
                                @Html.DropDownListFor(model => model.AccountId, (SelectList)ViewBag.accountsList, "Select One", htmlAttributes: new { @class = "form-control", id = "account-id" })
                                @Html.ValidationMessageFor(model => model.AccountId)
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Amount, new { @class = "" })
                                @Html.TextBoxFor(model => model.Amount, htmlAttributes: new { @class = "form-control", id = "amount-id" })
                                @Html.ValidationMessageFor(model => model.Amount)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GST, new { @class = "" })
                                @Html.TextBoxFor(model => model.GST, new { disabled = "disabled", @class = "form-control", id = "gst-id" })
                                @Html.ValidationMessageFor(model => model.GST)
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ItemDescription, new { @class = "" })
                                @Html.TextBoxFor(model => model.ItemDescription, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ItemDescription)
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.InvoiceNumber, new { @class = "" })
                                @Html.TextBoxFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.InvoiceNumber)
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, new { @class = "" })
                                @Html.TextBoxFor(model => model.Quantity, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Quantity)
                            </div>



                            @if (!ViewBag.New)
                            {
                                if (Model.TransactionBulkId > 0)
                                {

                                    @Html.Label("Single Transaction  ")
                                    <span>No</span>
                                }
                                else
                                {
                                    @Html.Label("Single Transaction  ")
                                    <span>Yes</span>
                                }

                            }

                            <div class="box-footer">
                                @*History Back*@
                                @if (Request.UrlReferrer != null)
                                {
                                    <div class="col-md-1">
                                        <a href=@Request.UrlReferrer class="btn btn-primary">
                                            <i class="fa fa-home">
                                                Back
                                            </i>
                                        </a>
                                    </div>
                                }

                                <input type="submit" name="submit" value="Save" class="btn btn-primary" />

                            </div>
                        </div>
                        </div>
                </div>
            </div>
        </div>
    </section>

}



<script type="text/javascript">
    $(document).ready(function () {
        $("#amount-id").change(function () {
            UpdateGST();
        })

        $("#account-id").change(function () {
            UpdateGST();
        })
    })



    function UpdateGST() {

        var amountId = $("#amount-id").val();
        var accountId = $("#account-id").val();


        $.ajax({

            type: "Post",
            url: "/Accounts/gst/" + accountId,
            contentType: "html",
            success: function (response) {                           

                $("#gst-id").val(roundNumber((amountId-(amountId/(1+(response*1)))), 2));                
            }
        })
    }

    function roundNumber(num, scale) {
        if (!("" + num).includes("e")) {
            return +(Math.round(num + "e+" + scale) + "e-" + scale);
        } else {
            var arr = ("" + num).split("e");
            var sig = ""
            if (+arr[1] + scale > 0) {
                sig = "+";
            }
            return +(Math.round(+arr[0] + "e" + sig + (+arr[1] + scale)) + "e-" + scale);
        }
    }

     $(function () {
         $("#vans-id").chosen();     
        $('#vans-id option').prop('selected', true);  
        $('#vans-id').trigger('chosen:updated');
     });    

</script>




